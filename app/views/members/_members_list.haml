.table-responsive
  %table.table.table-striped
    %thead
      %tr
        %th Name
        %th Phone(s)
        %th Email
        - if can? :manage, @members
          %th.hidden-xs.hidden-sm Role(s)
        %th
          - if can? :create, @members
            .text-right= link_to_new new_member_path

    %tbody
      - @members.each do |member|
        - next unless can? :read, member
        %tr
          %td.name
            - if member.inactive?
              = get_icon(:ban, class: 'icon inactive')
            - elsif member.has_role?(:volunteer)
              = get_icon(:record, class: 'icon')
            - elsif current_member.is_admin? and member.is_admin?
              = get_icon(:tower, class: 'icon')
            - elsif current_member.is_admin? and member.has_role?(:management)
              = get_icon(:star, class: 'icon')
            - else
              = get_icon(:user, class: 'icon')
            = link_to_member member
          %td.phone
            - member.phones.by_type.each do |phone|
              = link_to phone.listing, phone.as_tel_link
              %br
          %td.email{ class: can?( :manage, member ) ? "confirmed-#{member.confirmed?}" : nil }= mail_to member.email

          - if can? :manage, @members
            %td.hidden-xs.hidden-sm= link_to member.roles.by_name.map{|r| r.name}.join(', '), roles_path

          %td= render 'partials/admin_commands', klass: member, show: true

= will_paginate @members, renderer: BootstrapPagination::Rails
