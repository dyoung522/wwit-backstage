.table-responsive
  %table.table.table-striped
    %thead
      %tr
        %th Name
        - if can? :manage, Member
          %th
        %th Phone(s)
        %th Email
        - if can? :manage, Member
          %th.hidden-xs.hidden-sm Skill(s)
          -#%th.hidden-xs.hidden-sm Role(s)
        %th
          - if can? :create, @members
            .text-right= link_to_new new_member_path

    %tbody
      - @members.each do |member|
        - next unless can? :read, member
        %tr
          %td.avatar= image_tag member.avatar.url(:tiny)
          %td.name
            - if member.inactive?
              = get_icon :ban, class: 'icon inactive', title: 'Inactive Member'
            - elsif member.has_role?(:volunteer)
              = get_icon :record, class: 'icon', title: 'Volunteer'
            - elsif current_member.has_role?(:admin) and member.has_role?(:admin)
              = get_icon :admin, class: 'icon', title: 'Administrator'
            - elsif current_member.has_role?(:admin) and member.has_role?(:management)
              = get_icon :star, class: 'icon', title: 'Management'
            - elsif current_member.has_role?(:admin) and member.has_role?(:staff)
              = get_icon :staff, class: 'icon', title: 'Staff Member'
            - else
              = get_icon :user, class: 'icon', title: 'Company Member'
            = link_to_member member
          - if can? :manage, Member
            %td.hidden-xs.hidden-sm= get_icon :th, class: 'icon', title: 'Exempt from Conflict Limits' if member.conflict_exempt?
          %td.phone
            - member.phones.by_type.each do |phone|
              = link_to phone.listing, phone.as_tel_link
              %br
          %td.email{ class: can?( :manage, member ) ? "confirmed-#{member.confirmed?}" : nil }= mail_to member.email

          - if can? :manage, Member
            %td.hidden-xs.hidden-sm
              = member.skills.by_code.collect { |s| content_tag :span, s.code, rel: 'tooltip', data: { title: s.name, placement: 'top' } }.to_sentence.html_safe
            -#%td.hidden-xs.hidden-sm= link_to member.roles.by_name.map{|r| r.name}.join(', '), roles_path

          %td= render 'partials/admin_commands', klass: member, show: true

= will_paginate @members, renderer: BootstrapPagination::Rails
