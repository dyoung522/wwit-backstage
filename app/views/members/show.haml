#member
  .row
    .col-md-6
      %h1
        = @member.name
        %small
          = mail_to @member.email
          %em.inactive= 'INACTIVE' if @member.inactive?

    .col-md-6
      %h4.text-right
        %ul.list-unstyled
          - @member.phones.by_type.each do |phone|
            %li= link_to phone.long_listing, phone.as_tel_link
      .text-right
        - if can? :update, @member
          = link_to get_icon(:edit) + ' Edit', edit_member_path(@member)

  .row
    .col-md-12
      - if @member.is_castable?
        .plaque
          .pull-right= link_to get_icon(:list, text: 'All Castings'), member_cast_list_path(@member)
          %h3.no-top-pad Recent and Upcoming Shows
          - if @shows.empty?
            %p No upcoming Shows
          - else
            .table-responsive
              %table.table.table-condensed
                %th Date / Name
                %th Cast
                %th Crew
                %th
                - @shows.each do |show|
                  %tr{ class: ('is-soon' if show.is_today? )}
                    %td.col-md-4= link_to "#{show.date} - #{show.name}", show_path(show)
                    %td.col-md-4
                      %ul.list-unstyled
                        - if !show.mc.nil?
                          %li= link_to_member( show.mc ) + ' (MC)'
                        - show.actors.each do |member|
                          %li= link_to_member member
                    %td.col-md-4
                      %ul.list-unstyled
                        - show.shifts.each do |shift|
                          %li
                            .shift-code= shift.skill.code + ':'
                            = link_to_member shift.member
                    %td
                      - if show.notes.any?
                        .bs-popover{ title: 'Notes',
                          data: { container: 'body', toggle: 'popover', placement: 'auto left', trigger: 'click',
                                  content: show.notes.order(:created_at).collect{|n| n.content}.join('<br/>') },
                                  html: true }
                          = get_icon(:comment)

  .row
    - if @member.is_crewable?
      .col-md-12
        .plaque
          - if @member == current_member and @shifts.any?
            .pull-right= link_to get_icon(:calendar, text: 'Add to Calendar'), member_path(@member, :format => :ics)
          %h3.no-top-pad Recent and Upcoming Shifts
          - if @shifts.empty?
            %p No upcoming Shifts
          - else
            - @shifts.each do |shift|
              .row{ class: ('is-soon' if shift.show.is_soon?)}
                .col-sm-5.col-xs-6
                  .hidden-xs
                    = link_to "#{shift.show.human_date} @ #{shift.show.show_time} &#8211; #{shift.show.dow}".html_safe,
                              shift.show
                  .visible-xs= link_to shift.show.human_date, shift.show
                .col-sm-4.col-xs-6
                  = shift.skill.name
                  = ' (training)' if shift.training?
                .col-sm-3.hidden-xs
                  Call Time:
                  = shift.show.call_time

  - if @member == current_member
    .row
      .col-md-12
        .box
          %h3.no-top-pad Latest Announcements
          - @announcements.each do |message|
            .panel.pad-top-20
              .row
                .col-sm-6.hidden-xs
                  Subject:
                  = link_to truncate(message.subject, length: 60, seperator: ' '), message_path(message)
                .col-sm-4.col-xs-8
                  By:
                  = link_to_member message.sender
                .col-sm-2.col-xs-4= message.date
              .visible-xs= link_to truncate(message.subject, length: 60, seperator: ' '), message_path(message)
              .pad-top-20= sanitize message.formatted_text

  - if can? :update, @member
    .box
      .row
        %fieldset
          %legend Confidential Information
          .col-md-2 Sex: #{@member.sex || 'N/A'}
          .col-md-4
            Birthday: #{@member.birthday}
            - if current_member.is_admin?
              %p.pad-top-20
                %em Current Sign-in: #{human_datetime(@member.current_sign_in_at)}<br />
                %em Confirmed At: #{human_datetime(@member.confirmed_at)}
          .col-md-2 Address:
          .col-md-4
            - @member.addresses.each do |address|
              %strong= address.atype
              %address
                = address.street1
                - unless address.street2.blank?
                  %br
                  = address.street2
                %br
                = address.city
                = address.state + ', '
                = address.zip
            - if @member.addresses.empty?
              No Address Provided

  .row
    .col-md-4
      .plaque
        %h3.no-top-pad Group Memberships
        %ul
          - @member.roles.each do |role|
            %li= role.title

    - if @member.is_castable? or @member.is_crewable?
      .col-md-4
        .plaque
          %h3.no-top-pad Shift Skills
          - if @skills.empty?
            %p No Skills Assigned
          - else
            %ul
              - @skills.each do |skill|
                %li= skill.name

      .col-md-4
        .plaque
          %h3.no-top-pad Conflicts
          - if @conflicts.empty?
            %p No Conflicts
          - else
            %ul
              - @conflicts.each do |conflict|
                %li= conflict.date
          - if can? :update, Conflict
            = link_to 'Manage Conflicts', manage_member_conflicts_path(@member)

  .row
    .col-md-12
      .plaque
        Notes
        = render 'notes/notes', klass: @member
        .pad-top-20= render 'notes/form'

- if can? :update, @member
  = link_to 'Edit', edit_member_path(@member)

