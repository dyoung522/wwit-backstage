- member_min_shifts = Konfig.member_min_shifts

#conflicts-index
  %h1 Member Conflicts

  %table.table.table-striped
    %thead
      %tr
        %th Member Name
        %th
          Conflicts (
          %span.darkgreen Locked
          \/
          %span.red Unlocked
          )
        %th # Shifts
        %th
          - if can? :lock_conflicts, Conflict
            = link_to get_icon(:lock, text: 'Lock All'), lock_conflicts_path, method: :put

    %tbody
      - @members.to_a.uniq.each do |member|
        - over_limit = false ; months = []
        - member.conflicts.future.group_by{ |c| c.month }.each do |k,v|
          - if v.count > @max_conflicts
            - over_limit = true
            - months << k

        %tr
          %td.name= link_to member.name, member
          %td.col-md-6.upcoming
            - if member.conflicts.future.empty?
              No Conflicts
            - else
              %ul.list-unstyled
                - member.conflicts.future.group_by{|c| c.month}.each do |month, conflicts|
                  %li{ class: months.include?(month) ? 'red-bg' : nil }
                    %ul.list-inline.conflict-dates
                      - conflicts.each do |conflict|
                        %li{ class: conflict.locked? ? 'darkgreen' : 'red' }= conflict.us_date
          %td
            %ul.list-unstyled
              - member.shifts.future.group_by{|s| s.show.date.month}.each do |month, shifts|
                %li= link_to "#{Date::MONTHNAMES[month]}: #{shifts.count}", shifts_path(date: shifts.first.date)
          %td.manage= link_to 'Conflicts', manage_member_conflicts_path(member)

  = will_paginate @members, renderer: BootstrapPagination::Rails

